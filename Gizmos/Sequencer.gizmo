Switch {
 name Sequencer
 knobChanged "\nnode = nuke.thisNode()\nknob = nuke.thisKnob()\nwhich = node\['which']\n\nif knob.name() == 'inputChange':\n    # Check input node\n    for i in range(node.inputs()):\n        input = node.input(i)\n        if input and input.Class() != 'Read':\n            node.setInput(i, None)\n\n    if which.isAnimated():\n        which.clearAnimated()\n    which.setAnimated()\n    offset = 0\n    nuke_lastFrame = 1\n    nuke_firstFrame = 1\n\n    for i in range(node.inputs()):\n        input = node.input(i)\n        if input:\n            startFrame = input\[\"first\"].value()\n            endFrame = input\[\"last\"].value()\n            input\[\"frame_mode\"].setValue(\"offset\")\n            input\[\"frame\"].setValue(str(offset))\n            \n            which.setValueAt( i, startFrame-offset)\n            which.setValueAt( i, endFrame-offset)\n            \n    \n            if startFrame < nuke_firstFrame:\n                nuke_firstFrame = startFrame\n            if endFrame-offset > nuke_lastFrame:\n                nuke_lastFrame = endFrame-offset\n            \n            offset -= endFrame-startFrame+1\n            \n    if node\['adjust'].value():\n        nuke.root()\['first_frame'].setValue(nuke_firstFrame)\n        nuke.root()\['last_frame'].setValue(nuke_lastFrame)\n\nwhich.setFlag(nuke.INVISIBLE)\n"
 addUserKnob {20 Timo l Timo.ink}
 addUserKnob {6 adjust l "Auto Adjust Nuke Frame Range" +STARTLINE}
}
